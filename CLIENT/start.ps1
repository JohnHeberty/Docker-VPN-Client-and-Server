# VPN Client Startup Script - PowerShell
# ======================================

Write-Host "üöÄ Starting VPN Database Client..." -ForegroundColor Green
Write-Host "==================================" -ForegroundColor Green

# Verificar se .env existe
if (-Not (Test-Path ".env")) {
    Write-Host "‚ùå Arquivo .env n√£o encontrado!" -ForegroundColor Red
    Write-Host "üìù Copie .env.example para .env e configure as vari√°veis" -ForegroundColor Yellow
    exit 1
}

# Ler configura√ß√µes do .env
$envContent = Get-Content .env
$config = @{}
foreach ($line in $envContent) {
    if ($line -match "^([^#].*?)=(.*)$") {
        $config[$matches[1]] = $matches[2]
    }
}

# Validar configura√ß√µes essenciais
if (-Not $config["VPN_SERVER_IP"] -or -Not $config["TS_AUTHKEY"]) {
    Write-Host "‚ùå Configura√ß√µes obrigat√≥rias n√£o definidas no .env:" -ForegroundColor Red
    Write-Host "   - VPN_SERVER_IP: $($config['VPN_SERVER_IP'])" -ForegroundColor Yellow
    Write-Host "   - TS_AUTHKEY: $($config['TS_AUTHKEY'].Substring(0,20))..." -ForegroundColor Yellow
    exit 1
}

$localPort = if ($config["LOCAL_PORT"]) { $config["LOCAL_PORT"] } else { "15432" }
$localInterface = if ($config["LOCAL_INTERFACE"]) { $config["LOCAL_INTERFACE"] } else { "127.0.0.1" }
$vpnServerPort = if ($config["VPN_SERVER_PORT"]) { $config["VPN_SERVER_PORT"] } else { "5432" }

Write-Host "‚úÖ Configura√ß√µes validadas" -ForegroundColor Green
Write-Host "üì° VPN Server: $($config['VPN_SERVER_IP']):$vpnServerPort" -ForegroundColor Cyan
Write-Host "üè† Local Port: ${localInterface}:${localPort}" -ForegroundColor Cyan
Write-Host "üîê Tailscale AuthKey: $($config['TS_AUTHKEY'].Substring(0,20))..." -ForegroundColor Cyan

# Criar diret√≥rios se n√£o existirem
if (-Not (Test-Path "ts-authkey\state")) {
    New-Item -ItemType Directory -Path "ts-authkey\state" -Force | Out-Null
}
if (-Not (Test-Path "logs")) {
    New-Item -ItemType Directory -Path "logs" -Force | Out-Null
}

# Parar containers antigos
Write-Host "üõë Parando containers antigos..." -ForegroundColor Yellow
docker-compose down --remove-orphans 2>$null | Out-Null

# Iniciar servi√ßos
Write-Host "üê≥ Iniciando containers..." -ForegroundColor Yellow
docker-compose up -d

# Aguardar inicializa√ß√£o
Write-Host "‚è≥ Aguardando inicializa√ß√£o..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# Verificar status
Write-Host ""
Write-Host "üìä Status dos servi√ßos:" -ForegroundColor Cyan
docker-compose ps

# Verificar VPN
Write-Host ""
Write-Host "üåê Verificando conex√£o VPN..." -ForegroundColor Yellow
try {
    $vpnIP = docker exec ts-client tailscale ip 2>$null
    if ($vpnIP) {
        Write-Host "‚úÖ VPN conectada! IP: $vpnIP" -ForegroundColor Green
        
        # Testar ping no servidor
        Write-Host "üîç Testando conectividade com servidor VPN..." -ForegroundColor Yellow
        docker exec ts-client tailscale ping -c 1 $config['VPN_SERVER_IP'] 2>$null | Out-Null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Servidor VPN acess√≠vel via ping" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è  Servidor VPN n√£o responde ao ping (pode estar normal)" -ForegroundColor Yellow
        }
    }
} catch {
    Write-Host "‚è≥ VPN ainda conectando... (pode levar alguns minutos)" -ForegroundColor Yellow
}

# Verificar porta local
Write-Host ""
Write-Host "üîç Verificando porta local..." -ForegroundColor Yellow
Start-Sleep -Seconds 2
$portCheck = netstat -an | Select-String ":$localPort"
if ($portCheck) {
    Write-Host "‚úÖ Porta local $localPort est√° escutando" -ForegroundColor Green
} else {
    Write-Host "‚è≥ Porta $localPort pode levar alguns segundos..." -ForegroundColor Yellow
}

Write-Host ""
Write-Host "‚úÖ Cliente VPN iniciado!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Pr√≥ximos passos:" -ForegroundColor Cyan
Write-Host "   1. Use 'docker-compose logs -f' para acompanhar os logs" -ForegroundColor White
Write-Host "   2. Conecte suas aplica√ß√µes em localhost:$localPort" -ForegroundColor White
Write-Host ""
Write-Host "üîß Exemplos de conex√£o:" -ForegroundColor Cyan
Write-Host "   psql -h localhost -p $localPort -U usuario -d database" -ForegroundColor White
Write-Host "   mysql -h localhost -P $localPort -u usuario -p" -ForegroundColor White
Write-Host ""
Write-Host "üîç Comandos √∫teis:" -ForegroundColor Cyan
Write-Host "   docker exec ts-client tailscale status" -ForegroundColor White
Write-Host "   docker exec ts-client tailscale ping $($config['VPN_SERVER_IP'])" -ForegroundColor White
Write-Host "   docker-compose logs db-forwarder" -ForegroundColor White